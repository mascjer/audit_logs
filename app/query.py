new_rate_query_string = '''
WITH pre_lms_fix AS (
-------------------------------
-- need this because LMS has 
-- different ammounts assigned to them for a 
-- charge detail id that doesnt matter to us
------------------------------
SELECT DISTINCT
	O.CUSTOMERORDERNUMBER ORDER_NUMBER,
	O.CREATEDATETIME CREATE_DATETIME,
	P.PARTYCODE BILL_TO_CUSTOMER_CODE,
	RC.REFDATACODE RATE_CODE,
	RC.VALUE RATE_CODE_DESCRIPTION,
	RT.VALUE RATE_TYPE,
	RS.VALUE RATE_SOURCE,
	CHD.AMOUNT,
	CH.EXCHANGERATE,
	CURRENT_TIMESTAMP AUDIT_DATETIME
FROM CDC_ORION.BROKER.CO_ORDER O
INNER JOIN CDC_ORION.BROKER.EP_ACTIVITY A
	ON A.ORDERNUMBER = O.CUSTOMERORDERNUMBER 
	AND A.HVR_ISDELETE = 0
INNER JOIN CDC_ORION.BROKER.EP_CHARGEDETAIL CHD
	ON A.ACTIVITYID = CHD.ACTIVITYID 
	AND CHD.INACTIVE = 0
	AND CHD.HVR_ISDELETE = 0
INNER JOIN CDC_ORION.BROKER.CO_CHARGE CH
	ON CHD.CHARGEID = CH.CHARGEID 
	AND CHD.INACTIVE = 0
	AND CHD.HVR_ISDELETE = 0
	AND CH.FINANCIALTYPERDN = 486
INNER JOIN CDC_ORION.BROKER.CO_ORDERPARTY OP
	ON OP.ORDERPARTYID = CH.ORDERPARTYID  
	AND OP.HVR_ISDELETE = 0
	AND OP.PARTYROLERDN = 326
INNER JOIN CDC_MDM.BROKER.MDM_PARTY P
	ON P.PARTYNUMBER = OP.PARTYNUMBER 
	AND P.PARTYTYPERDN = 7
LEFT JOIN CDC_REFERENCEDATA.BROKER.REF_REFDATA RC
	ON RC.HVR_ISDELETE = 0
	AND RC.REFDATANUMBER = CH.RATECODERDN
LEFT JOIN CDC_REFERENCEDATA.BROKER.REF_REFDATA RT
	ON RT.HVR_ISDELETE = 0
	AND RT.REFDATANUMBER = CH.RATETYPERDN 
LEFT JOIN CDC_REFERENCEDATA.BROKER.REF_REFDATA RS
	ON RS.HVR_ISDELETE = 0
	AND RS.REFDATANUMBER = CH.RATESOURCERDN  
WHERE O.HVR_ISDELETE = 0
AND O.CREATEDATETIME >= DATEADD(MONTH, -1, CURRENT_DATE())
AND O.CREATEDATETIME >= DATE('2023-08-18')
and O.ConditionRDN <> 384
)
SELECT 
	ORDER_NUMBER,
	CREATE_DATETIME,
	BILL_TO_CUSTOMER_CODE,
	RATE_CODE,
	RATE_CODE_DESCRIPTION,
	RATE_TYPE RATE_TYPE,
	RATE_SOURCE RATE_SOURCE,
	round(sum(AMOUNT * EXCHANGERATE),2) TOTAL,
	AUDIT_DATETIME
FROM pre_lms_fix 
GROUP BY ALL
'''


old_rate_query_string = '''
SELECT 
	*
FROM SANDBOX_NAST_LTL_DOMAIN.BASE.LTL_ORDER_RATE_AUDIT_LOG
WHERE 1=1
AND CREATE_DATETIME  >= DATEADD(MONTH, -1, CURRENT_DATE())
and CREATE_DATETIME >= DATE('2023-08-18')
'''


new_cost_query_string = '''
WITH pre_lms_fix AS (
-------------------------------
-- need this because LMS has 
-- different ammounts assigned to them for a 
-- charge detail id that doesnt matter to us
-------------------------------
SELECT DISTINCT
	O.CUSTOMERORDERNUMBER ORDER_NUMBER,
	O.CREATEDATETIME CREATE_DATETIME,
	P.PARTYCODE CARRIER_CODE,
	RC.REFDATACODE RATE_CODE,
	RC.VALUE RATE_CODE_DESCRIPTION,
	RT.VALUE RATE_TYPE,
	RS.VALUE RATE_SOURCE,
	CD.AMOUNT,
	CO.EXCHANGERATE,
	CURRENT_TIMESTAMP AUDIT_DATETIME
FROM CDC_ORION.BROKER.CO_ORDER O
INNER JOIN CDC_ORION.BROKER.EP_ACTIVITY A
	ON A.ORDERNUMBER = O.CUSTOMERORDERNUMBER 
	AND A.HVR_ISDELETE = 0
INNER JOIN CDC_ORION.BROKER.EP_COSTDETAIL CD
	ON CD.ACTIVITYID = A.ACTIVITYID 
	AND CD.INACTIVE = 0
	AND CD.HVR_ISDELETE = 0
INNER JOIN CDC_ORION.BROKER.SO_COST CO
	ON CO.COSTID = CD.COSTID 
	AND CO.HVR_ISDELETE = 0
	AND CO.FINANCIALTYPERDN = 487
INNER JOIN CDC_ORION.BROKER.SO_PARTY SP
	ON SP.PARTYID = CO.PARTYID 
	AND SP.HVR_ISDELETE = 0
INNER JOIN CDC_MDM.BROKER.MDM_PARTY P
	ON P.PARTYNUMBER = SP.PARTYNUMBER  
	AND P.PARTYTYPERDN = 8
	AND P.HVR_ISDELETE = 0
LEFT JOIN CDC_REFERENCEDATA.BROKER.REF_REFDATA RC
	ON RC.HVR_ISDELETE = 0
	AND RC.REFDATANUMBER = CO.RATECODERDN
LEFT JOIN CDC_REFERENCEDATA.BROKER.REF_REFDATA RT
	ON RT.HVR_ISDELETE = 0
	AND RT.REFDATANUMBER = CO.RATETYPERDN
LEFT JOIN CDC_REFERENCEDATA.BROKER.REF_REFDATA RS
	ON RS.HVR_ISDELETE = 0
	AND RS.REFDATANUMBER = CO.RATESOURCERDN 
WHERE O.HVR_ISDELETE = 0
AND O.CREATEDATETIME >= DATEADD(MONTH, -1, CURRENT_DATE())
AND O.CREATEDATETIME >= DATE('2023-08-18')
and O.ConditionRDN <> 384
)
SELECT 
	ORDER_NUMBER,
	CREATE_DATETIME,
	CARRIER_CODE,
	RATE_CODE,
	RATE_CODE_DESCRIPTION,
	RATE_TYPE RATE_TYPE,
	RATE_SOURCE RATE_SOURCE,
	round(sum(AMOUNT * EXCHANGERATE),2) TOTAL,
	AUDIT_DATETIME
FROM pre_lms_fix
GROUP BY ALL
'''


old_cost_query_string = '''
SELECT 
	*
FROM SANDBOX_NAST_LTL_DOMAIN.BASE.LTL_ORDER_COST_AUDIT_LOG
WHERE 1=1
AND CREATE_DATETIME  >= DATEADD(MONTH, -1, CURRENT_DATE())
and CREATE_DATETIME >= DATE('2023-08-18')
'''